@use '../abstract/' as *;
@layer utilities {
  .grid-layout {
    --_inline-offset: var(--layout-inline-offset);
    --_narrow-size-reduction: var(--layout-narrow-size-reduction);
    --_popout-extra-distance: var(--layout-popout-extra-distance);
    --_breakout-extra-distance: var(--layout-breakout-extra-distance);
    --_content-max-inline-size: var(--layout-content-max-inline-size);
    --_narrow-column-size: calc((var(--_content-max-inline-size) - var(--_narrow-size-reduction)) / 2);
    --_content-column-size: var(--_narrow-size-reduction);
    --_breakout-column-size: calc(var(--_breakout-extra-distance) - var(--_popout-extra-distance));
    @include grid;
    & {
      grid-template-columns:
        [full-inline-size-start] minmax(var(--_inline--offset), 1fr)
        [breakout-inline-size-start] minmax(0, var(--_breakout-column-size))
        [popout-inline-size-start] minmax(0, var(--_popout-extra-distance))
        [content-inline-size-start] minmax(0, var(--_content-column-size))
        [narrow-inline-size-start]
        min(50% - var(--_inline--offset), var(--_narrow-column-size))
        [center-line]
        min(50% - var(--_inline--offset), var(--_narrow-column-size))
        [narrow-inline-size-end]
        minmax(0, var(--_content-column-size))
        [content-inline-size-end]
        minmax(0, var(--_popout-extra-distance)) [popout-inline-size-end]
        minmax(0, var(--_breakout-column-size)) [breakout-inline-size-end]
        minmax(var(--inline--offset), 1fr) [full-inline-size-end];
      &, [data-grid-cell="full-inline-size"] {
        & > * {
          grid-column: content-inline-size;
        }
        & > [data-grid-cell="full-inline-size"] {
          @include grid;
				  & {
            grid-template-columns: inherit;
				    grid-column: full-inline-size;
          }
        }
        & > [data-grid-cell="full-inline-size-left"] {
          grid-column: full-inline-size-start / content-inline-size-end;
        }
        & > [data-grid-cell="full-inline-size-right"] {
          grid-column: content-inline-size-start / full-inline-size-end;
        }
        & > [data-grid-cell="breakout-inline-size"] {
          grid-column: breakout-inline-size;
        }
        & > [data-grid-cell="breakout-inline-size-left"] {
          grid-column: breakout-inline-size-start / content-inline-size-end;
        }
        & > [data-grid-cell="breakout-inline-size-right"] {
          grid-column: content-inline-size-start / popout-inline-size-end;
        }
        & > [data-grid-cell="narrow-inline-size"] {
          grid-column: narrow-inline-size;
        }
        & > [data-grid-cell="narrow-inline-size-left"] {
          grid-column: narrow-inline-size-start / content-inline-size-end;
        }
        & > [data-grid-cell="narrow-inline-size-right"] {
          grid-column: content-inline-size-start / narrow-inline-size-end;
        }
        & > [data-grid-cell="popout-inline-size"] {
          grid-column: popout-inline-size;
        }
        & > [data-grid-cell="popout-inline-size-left"] {
          grid-column: popout-inline-size-start / content-inline-size-end;
        }
        & > [data-grid-cell="popout-inline-size-right"] {
          grid-column: content-inline-size-start / popout-inline-size-end;
        }
        & > [data-grid-cell="full-inline-size-breakout-split"],
        & > [data-grid-cell="full-inline-size-narrow-split"],
        & > [data-grid-cell="full-inline-size-popout-split"],
        & > [data-grid-cell="full-inline-size-content-split"] {
          @include grid;
				  & {
            grid-template-columns: inherit;
				    grid-column: full-inline-size;
          }
          & > :is(:first-child, :last-child) {
            @include grid;
            & {
              grid-template-columns: subgrid;
            }
          }
          & > :where(:first-child) {
            grid-column: full-inline-size-start / center-line;
            & > * {
              grid-column: var(--_grid-cell-size, content-inline-size) / center-line;
            }
          }
          & > :where(:last-child) {
            grid-column: center-line / full-inline-size-end;
            & > * {
              grid-column: center-line / var(--_grid-cell-size);
            }
          }
        }
        & > [data-grid-cell="full-inline-size-breakout-split"] {
          --_grid-cell-size: breakout-inline-size;
        }
        & > [data-grid-cell="full-inline-size-narrow-split"] {
          --_grid-cell-size: narrow-inline-size;
        }
        & > [data-grid-cell="full-inline-size-popout-split"] {
          --_grid-cell-size: popout-inline-size;
        }
        & > [data-grid-cell="full-inline-size-content-split"] {
          --_grid-cell-size: content-inline-size;
        }
      }
    }
  }
}